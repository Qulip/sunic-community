plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.5.4-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sunic'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.spring.io/snapshot' }
}

dependencies {
    // Core dependency on spec module
    implementation project(':community-spec')

    // Spring Boot starters for business logic and data access
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-tx'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok for reducing boilerplate
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL for type-safe queries
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // WebClient for REST calls
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:mysql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}